import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class ΠλησιέστεροςΓείτονας {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Εισαγωγή του αριθμού των νησιών
        System.out.print("Εισάγετε τον αριθμό των νησιών (0-10): ");
        int αριθμόςΝησιών = scanner.nextInt();

        if (αριθμόςΝησιών <= 0 || αριθμόςΝησιών > 10) {
            System.out.println("Μη έγκυρος αριθμός νησιών. Παρακαλώ εισάγετε έναν αριθμό μεταξύ 1 και 10.");
            return;
        }

        // Εισαγωγή των συντεταγμένων των νησιών
        double[][] συντεταγμένες = new double[αριθμόςΝησιών][2];
        System.out.println("Εισάγετε τις συντεταγμένες (x y) κάθε νησιού:");
        for (int i = 0; i < αριθμόςΝησιών; i++) {
            System.out.print("Νησί " + (i + 1) + ": ");
            συντεταγμένες[i][0] = scanner.nextDouble();
            συντεταγμένες[i][1] = scanner.nextDouble();
        }

        // Υπολογισμός της συντομότερης διαδρομής
        List<Integer> σειράΕπίσκεψης = new ArrayList<>();
        double συντομότερηΑπόσταση = βρεςΣυντομότερηΔιαδρομή(αριθμόςΝησιών, συντεταγμένες, σειράΕπίσκεψης);

        // Εκτύπωση αποτελεσμάτων
        System.out.println("Σειρά επίσκεψης των νησιών: " + σειράΕπίσκεψης);
        System.out.println("Συνολική απόσταση (συντομότερη διαδρομή): " + συντομότερηΑπόσταση);

        scanner.close();
    }

    private static double βρεςΣυντομότερηΔιαδρομή(int αριθμόςΝησιών, double[][] συντεταγμένες, List<Integer> σειράΕπίσκεψης) {
        boolean[] επισκέφθηκε = new boolean[αριθμόςΝησιών];
        επισκέφθηκε[0] = true; // Ξεκινάμε από το πρώτο νησί
        σειράΕπίσκεψης.add(1); // Προσθέτουμε το πρώτο νησί στη σειρά (μετράμε από το 1)

        int τρέχονΝησί = 0;
        double συνολικήΑπόσταση = 0.0;

        for (int βήμα = 1; βήμα < αριθμόςΝησιών; βήμα++) {
            double πλησιέστερηΑπόσταση = Double.MAX_VALUE;
            int πλησιέστεροΝησί = -1;

            // Βρίσκουμε το πλησιέστερο μη επισκέψιμο νησί
            for (int i = 0; i < αριθμόςΝησιών; i++) {
                if (!επισκέφθηκε[i]) {
                    double απόσταση = υπολόγισεΑπόσταση(συντεταγμένες[τρέχονΝησί], συντεταγμένες[i]);
                    if (απόσταση < πλησιέστερηΑπόσταση) {
                        πλησιέστερηΑπόσταση = απόσταση;
                        πλησιέστεροΝησί = i;
                    }
                }
            }

            // Επισκεπτόμαστε το πλησιέστερο νησί
            επισκέφθηκε[πλησιέστεροΝησί] = true;
            σειράΕπίσκεψης.add(πλησιέστεροΝησί + 1); // Προσθέτουμε το νησί στη σειρά (μετράμε από το 1)
            συνολικήΑπόσταση += πλησιέστερηΑπόσταση;
            τρέχονΝησί = πλησιέστεροΝησί;
        }

        // Επιστρέφουμε στο αρχικό νησί
        συνολικήΑπόσταση += υπολόγισεΑπόσταση(συντεταγμένες[τρέχονΝησί], συντεταγμένες[0]);
        σειράΕπίσκεψης.add(1); // Επιστροφή στο πρώτο νησί

        return συνολικήΑπόσταση;
    }

    private static double υπολόγισεΑπόσταση(double[] σημείο1, double[] σημείο2) {
        return Math.sqrt(Math.pow(σημείο1[0] - σημείο2[0], 2) + Math.pow(σημείο1[1] - σημείο2[1], 2));
    }
}
